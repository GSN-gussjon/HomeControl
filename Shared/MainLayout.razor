@using HomeControl.Services
@using HomeControl.Static
@inherits LayoutComponentBase
@inject AuthService authService

@if (!authService.IsAuthenticated)
{
    <HomeControl.Pages.Login />
}
else
{
    <RadzenLayout class="rz-shadow-3" Style="grid-template-columns: auto 1fr auto; grid-template-areas: 'rz-header rz-header rz-header' 'rz-sidebar rz-body rz-right-sidebar'">
        <RadzenHeader>
            <div class="d-flex align-items-center">
                <div class="col-md-11" style="float: left;">
                    <RadzenSidebarToggle Click="@(() => sidebar1Expanded = !sidebar1Expanded)" />
                    <RadzenLabel Text="Home Control" Style="vertical-align: super" />
                </div>

                <div class="align-items-center col-md-1">
                    <RadzenButton ButtonStyle="ButtonStyle.Secondary" Variant="Variant.Outlined" Icon="logout" Click="@(args => OnLogout())" Style="float: right" />
                </div>
            </div>
        </RadzenHeader>
        <RadzenSidebar @bind-Expanded="@sidebar1Expanded">
            <RadzenPanelMenu>
                <RadzenPanelMenuItem Text="Panel główny" Icon="home" Path="Home" />
                <RadzenPanelMenuItem Text="Menu" Icon="restaurant" Path="foodmenu" />
                <RadzenPanelMenuItem Text="Encje" Icon="dashboard">
                    <RadzenPanelMenuItem Text="Światła" Icon="lightbulb" Path="fetchdata" />
                </RadzenPanelMenuItem>
            </RadzenPanelMenu>
        </RadzenSidebar>
        <RadzenBody>
            @Body
        </RadzenBody>
    </RadzenLayout>
}
@code {
    private bool collapseNavMenu = true;
    bool sidebar1Expanded = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override void OnInitialized()
    {
        authService.CheckLogin();

        base.OnInitialized();
    }

    private void OnLogout()
    {
        authService.Logout();
    }
}